{"version":3,"sources":["components/TopMenu.js","components/Footer.js","components/Breadcrumb.js","store/actions/actionTypes.js","firebase/firebaseConfig.js","firebase/noteDataRef.js","components/NoteItem.js","store/actions/noteDataActions.js","components/Loading.js","components/_function.js","components/NoteList.js","components/SearchAndSort.js","components/Actions.js","components/NoteForm.js","App.js","serviceWorker.js","store/reducers/noteReducer.js","store/reducers/modeReducer.js","store/rootReducer.js","index.js"],"names":["TopMenu","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","Breadcrumb","address","this","props","map","value","index","length","key","aria-current","SORT_TITLE_ASC","SORT_TITLE_DESC","SORT_DATE_ASC","SORT_DATE_DESC","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","noteDataRef","database","ref","NoteItem","handleOpenEdit","item","enterEditMode","handleDelete","deleteId","window","confirm","deleteFunc","renderNewFlag","unixTime","Math","round","Date","getTime","ONE_DAY","renderDateTime","date","title","toLocaleDateString","renderEditBtn","disableEditBtn","disabled","onClick","data","idItem","lastEditDate","content","role","connect","dispatch","noteId","child","remove","noteItem","itemEdit","Loading","templateSortFunc","allNotes","comparator","tempToSortArr","Object","keys","forEach","push","sort","first","second","fromEntries","sortTitleAsc","note","nextNote","localeCompare","sortTitleDesc","sortDateAsc","sortDateDesc","NoteList","getResultSearch","keyword","result","search","getResultSort","sortMode","actionTypes","handler","getNotes","noteData","isLoading","searchKey","entries","isEditMode","state","ownProps","appStatus","isSearchMode","isSortMode","on","notes","payload","val","SearchAndSort","handleChange","event","setState","target","name","handleSearchSubmit","preventDefault","trim","turnSearchOn","handleCancel","reset","cancelSearch","onSubmit","onReset","required","onChange","placeholder","aria-haspopup","turnSortOn","cancelSort","modeName","Actions","showNoteForm","NoteForm","editModel","cancelEdit","cancelAdd","handleSubmitAdd","addNewFunc","e","handleSubmitEdit","toString","editedItem","editSaveFunc","handleSubmit","renderValue","titleWidget","htmlFor","defaultValue","rows","newNote","newItem","getKey","editNote","console","log","update","App","status","isAddMode","Boolean","location","hostname","match","initialState","rootReducer","combineReducers","action","newData","assign","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6ddeaed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class TopMenu extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            My Note App\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Home\r\n                  <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Services\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Contact\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopMenu;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"py-5 bg-dark\">\r\n      <div className=\"container\">\r\n        <p className=\"m-0 text-center text-white\">\r\n          Copyright © Your Website 2019\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Breadcrumb extends Component {\r\n  render() {\r\n    const {address} = this.props;\r\n    return (\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb bg-light border-bottom\">\r\n          <li className=\"breadcrumb-item\">\r\n            My Note App\r\n          </li>\r\n          {\r\n            address.map((value, index) => {\r\n              if (index === address.length-1) \r\n                return ( <li key={index} className=\"breadcrumb-item active\" aria-current=\"page\">{value}</li>); \r\n              else return (<li key={index} className=\"breadcrumb-item\">{value}</li>);\r\n            })\r\n          }\r\n\r\n        </ol>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Breadcrumb;\r\n","export const ADD_NEW = \"ADD_NEW\";\r\nexport const DELETE = \"DELETE\";\r\nexport const EDIT = \"EDIT\";\r\nexport const GET_ALL = \"GET_ALL\";\r\n\r\nexport const TURN_ADD_ON = \"TURN_ADD_ON\";\r\nexport const TURN_ADD_OFF = \"TURN_ADD_OFF\";\r\n\r\nexport const TURN_EDIT_OFF = \"TURN_EDIT_OFF\";\r\nexport const TURN_EDIT_ON = \"TURN_EDIT_ON\";\r\n\r\nexport const TURN_SEARCH_OFF = \"TURN_SEARCH_OFF\";\r\nexport const TURN_SEARCH_ON = \"TURN_SEARCH_ON\";\r\n\r\nexport const TURN_SORT_OFF = \"TURN_SORT_OFF\";\r\nexport const TURN_SORT_ON = \"TURN_SORT_ON\";\r\nexport const SORT_TITLE_ASC = \"SORT_TITLE_ASC\";\r\nexport const SORT_TITLE_DESC = \"SORT_TITLE_DESC\";\r\nexport const SORT_DATE_ASC = \"SORT_DATE_ASC\";\r\nexport const SORT_DATE_DESC = \"SORT_DATE_DESC\";","// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCsvX7RdDeDk_Pu7oF0iljd9drSgyM6r5M\",\r\n  authDomain: \"note-react-e1434.firebaseapp.com\",\r\n  databaseURL: \"https://note-react-e1434.firebaseio.com\",\r\n  projectId: \"note-react-e1434\",\r\n  storageBucket: \"note-react-e1434.appspot.com\",\r\n  messagingSenderId: \"575571829147\",\r\n  appId: \"1:575571829147:web:2a0c70aa0f5f2e1822013e\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport firebaseConfig from \"./firebaseConfig\";\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const noteDataRef = firebase.database().ref(\"/noteData\");","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { deleteNote } from \"../store/actions/noteDataActions\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\"\r\n\r\nexport class NoteItem extends Component {\r\n\r\n  handleOpenEdit = (item, id) => {\r\n    item[\"key\"] = id;\r\n    this.props.enterEditMode(item);\r\n  }\r\n\r\n  handleDelete = (deleteId) => {\r\n    if (window.confirm(\"Are you sure ?\"))\r\n      this.props.deleteFunc(deleteId);\r\n    } \r\n\r\n  renderNewFlag = (unixTime) => {\r\n    const nowUnixTime = Math.round((new Date()).getTime() / 1000);\r\n    const ONE_DAY = 86400;\r\n    if (nowUnixTime - unixTime < ONE_DAY/2)\r\n    return ( <span className=\"badge badge-danger badge-pill\">new</span>);\r\n  }\r\n\r\n  renderDateTime = (unixTime) => {\r\n    const date = new Date(unixTime*1000);\r\n    return (\r\n      <abbr title={date}>{date.toLocaleDateString()}</abbr>\r\n    );\r\n  }\r\n\r\n  renderEditBtn = () => {\r\n    if (this.props.disableEditBtn)\r\n      return (\r\n        <button type=\"button\" disabled className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n      )\r\n    return (\r\n      <button type=\"button\" onClick={() => this.handleOpenEdit(this.props.data, this.props.idItem)} \r\n      className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n  )}\r\n\r\n  render() {\r\n    const {title, lastEditDate, content} = this.props.data;\r\n    return (\r\n      <div className=\"card shadow-sm\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{title} {this.renderNewFlag(lastEditDate)}</h5>\r\n          <p className=\"card-text mb-1\">{content}</p>\r\n          <small className=\"text-muted\">Last updated:  {this.renderDateTime(lastEditDate)}</small>\r\n          <div className=\"btn-group mt-1 d-block\" role=\"group\">\r\n            {this.renderEditBtn()}\r\n            <button onClick={() => this.handleDelete(this.props.idItem)} type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteFunc : (deleteId) => dispatch(deleteNote(deleteId)),\r\n    enterEditMode : (noteItem) => {\r\n      dispatch({\r\n        type : actionTypes.TURN_EDIT_ON, \r\n        itemEdit : noteItem\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(NoteItem);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport {noteDataRef} from \"../../firebase/noteDataRef\";\r\n\r\nexport const getAllNotes = () => {\r\n    return dispatch => {\r\n        noteDataRef.on(\"value\", notes => {\r\n            dispatch({\r\n                type : actionTypes.GET_ALL,\r\n                payload : notes.val()\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewNote = (newItem) => {\r\n    return dispatch => {\r\n        newItem.lastEditDate = new Date().getTime() / 1000 //time to unix\r\n        const id = noteDataRef.push(newItem).getKey();\r\n        const newNote = {};\r\n        newNote[id] = newItem;\r\n        dispatch({\r\n            type : actionTypes.ADD_NEW,\r\n            newItem : newNote\r\n        })\r\n    }\r\n} \r\n\r\nexport const deleteNote = (noteId) => {\r\n    return dispatch => {\r\n        noteDataRef.child(noteId).remove();\r\n        dispatch({\r\n            type : actionTypes.DELETE,\r\n            noteId : noteId\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveEditNote = (editedItem) => {\r\n    return dispatch => {\r\n        console.log(editedItem);\r\n        noteDataRef.update(editedItem);\r\n        dispatch({\r\n            type : actionTypes.EDIT,\r\n            item : editedItem\r\n        })\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <p><span className=\"spinner-border text-secondary\" role=\"status\" /> Loading</p>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","const templateSortFunc = (allNotes, comparator) => {\r\n  var tempToSortArr = [];\r\n  Object.keys(allNotes).forEach(key => {\r\n    tempToSortArr.push([key, allNotes[key]]);\r\n  });\r\n  tempToSortArr.sort((first, second) => comparator(first[1], second[1]));\r\n  return Object.fromEntries(tempToSortArr);\r\n};\r\n\r\nexport const sortTitleAsc = allNotes => {\r\n  return templateSortFunc(allNotes, (note, nextNote) =>\r\n    note.title.localeCompare(nextNote.title)\r\n  );\r\n};\r\n\r\nexport const sortTitleDesc = allNotes => {\r\n  return templateSortFunc(allNotes, (note, nextNote) =>\r\n    nextNote.title.localeCompare(note.title)\r\n  );\r\n};\r\n\r\nexport const sortDateAsc = allNotes => {\r\n  var comparator = (note, nextNote) =>\r\n    nextNote.lastEditDate - note.lastEditDate;\r\n  return templateSortFunc(allNotes, comparator);\r\n};\r\n\r\nexport const sortDateDesc = allNotes => {\r\n  var comparator = (note, nextNote) =>\r\n    note.lastEditDate - nextNote.lastEditDate;\r\n  return templateSortFunc(allNotes, comparator);\r\n};\r\n","import NoteItem from \"./NoteItem\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllNotes } from \"../store/actions/noteDataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport * as handler from \"./_function\";\r\n\r\nexport class NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getNotes();\r\n  }\r\n\r\n  getResultSearch = (keyword, allNotes) => {\r\n    var result = {};\r\n    Object.keys(allNotes).forEach(key => {\r\n      if (allNotes[key].title.search(keyword) !== -1 ||\r\n        allNotes[key].content.search(keyword) !== -1 )\r\n        result[key] = allNotes[key];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getResultSort = (sortMode, allNotes) => {\r\n    switch (sortMode) {\r\n      case actionTypes.SORT_TITLE_ASC:\r\n        return handler.sortTitleAsc(allNotes);\r\n      case actionTypes.SORT_TITLE_DESC:\r\n        return handler.sortTitleDesc(allNotes);\r\n      case actionTypes.SORT_DATE_ASC:\r\n        return handler.sortDateAsc(allNotes);\r\n      case actionTypes.SORT_DATE_DESC:\r\n        return handler.sortDateDesc(allNotes);\r\n      default:\r\n        return allNotes;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var { noteData, isLoading, searchKey, sortMode } = this.props;\r\n\r\n    if (searchKey !== null) {\r\n      noteData = this.getResultSearch(searchKey, noteData);\r\n    }\r\n\r\n    if (sortMode !== null) {\r\n      noteData = this.getResultSort(sortMode, noteData);\r\n    }\r\n\r\n    if (isLoading)\r\n      return (\r\n        <div className=\"card-columns px-3 vh-100 d-flex align-items-center justify-content-center\">\r\n          <Loading />\r\n        </div>\r\n      );\r\n    else if (Object.entries(noteData).length === 0)\r\n        return (\r\n          <div className=\"card-columns px-3 vh-100 d-flex justify-content-center\">\r\n            <p className=\"font-italic\">There is 0 result.</p>\r\n        </div>\r\n        )\r\n    return (\r\n      <div className=\"card-columns px-3 min-vh-100\">\r\n        {Object.keys(noteData).map(key => (\r\n          <NoteItem\r\n            key={key}\r\n            idItem={key}\r\n            data={noteData[key]}\r\n            disableEditBtn={this.props.isEditMode !== null}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    noteData: state.noteData.data,\r\n    isLoading: state.noteData.isLoading,\r\n    isEditMode: state.appStatus.isEditMode,\r\n    searchKey: state.appStatus.isSearchMode,\r\n    sortMode: state.appStatus.isSortMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getNotes: () => {\r\n      dispatch(getAllNotes());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\n\r\nexport class SearchAndSort extends Component {\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.searchKey && this.state.searchKey.trim() !== \"\") {\r\n      this.props.turnSearchOn(this.state.searchKey);\r\n    }\r\n  }\r\n\r\n  handleCancel = (event) => {\r\n    event.target.reset();\r\n    this.props.cancelSearch();\r\n    this.setState({searchKey : \"\"});\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.props;\r\n    if (isLoading)\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h5 className=\"card-title\">View Setting</h5>\r\n          </div>\r\n          <div className=\"card-body d-flex align-items-center justify-content-center\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">View Setting</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"search-form\">\r\n            <form onSubmit={(event) => this.handleSearchSubmit(event)} onReset={(event) => this.handleCancel(event)}>\r\n              <input required onChange={(event) => this.handleChange(event)} name=\"searchKey\" type=\"text\" className=\"form-control mr-2\" placeholder=\"Search key ...\" />\r\n              <div className=\"float-right btn-group mt-2\">\r\n                {this.props.searchKey !== null ? <button type=\"reset\" className=\"btn btn-secondary\">Cancel</button> : null}\r\n                <button type=\"submit\" className=\"order-last btn btn-secondary \">Search</button>\r\n              </div>\r\n            </form>\r\n            <button className=\"mt-2 btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Sort\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.turnSortOn(actionTypes.SORT_TITLE_ASC)}>Title A-Z</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.turnSortOn(actionTypes.SORT_TITLE_DESC)}>Title Z-A</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.turnSortOn(actionTypes.SORT_DATE_ASC)}>Date asc</button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.cancelSort()}>Reset sort</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isLoading : state.noteData.isLoading,\r\n    searchKey : state.appStatus.isSearchMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    turnSearchOn : (keyword) => dispatch({type : actionTypes.TURN_SEARCH_ON, keyword}),\r\n    cancelSearch : () => dispatch({type : actionTypes.TURN_SEARCH_OFF}),\r\n    cancelSort : () => dispatch({type: actionTypes.TURN_SORT_OFF}),\r\n    turnSortOn : (modeName) => dispatch({type: actionTypes.TURN_SORT_ON, modeName})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchAndSort);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\n\r\nexport class Actions extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card my-2\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">Action</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <button className=\"btn btn-block btn-primary\" onClick={this.props.showNoteForm}>Add</button>\r\n          <button className=\"btn btn-block btn-danger\">Clear all</button>\r\n          {/* <button className=\"btn btn-block btn-primary\" disabled>\r\n            <span className=\"spinner-border-sm spinner-border\" role=\"status\" />\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    showNoteForm : () => {dispatch({type: actionTypes.TURN_ADD_ON})}\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Actions);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport { addNewNote, saveEditNote } from \"../store/actions/noteDataActions\";\r\n\r\nexport class NoteForm extends Component {\r\n  \r\n  handleCancel = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.editModel != null) {\r\n      this.props.cancelEdit();\r\n    } else this.props.cancelAdd();\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmitAdd = event => {\r\n    try {\r\n      const { title, content } = this.state;\r\n      this.props.addNewFunc({ title, content });\r\n      event.target.reset();\r\n      this.setState({\r\n        title: null,\r\n        content: null\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  handleSubmitEdit = () => {\r\n    try {\r\n    var { title, content } = this.state;\r\n    //undefined check\r\n    title.toString();\r\n    content.toString();\r\n    } catch (e) {\r\n      if (!title) title = this.props.editModel.title;\r\n      if (!content) content = this.props.editModel.content;\r\n    }\r\n\r\n    var editedItem = {};\r\n    const lastEditDate = new Date().getTime() / 1000\r\n    editedItem[this.props.editModel.key] = { title, content,lastEditDate };\r\n    this.props.editSaveFunc(editedItem);\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.editModel != null) {\r\n      this.handleSubmitEdit();\r\n      this.props.cancelEdit();\r\n    }\r\n    else this.handleSubmitAdd(event);\r\n  };\r\n\r\n  renderValue = value => {\r\n    return value ? value : \"\";\r\n  };\r\n\r\n  render() {\r\n    var titleWidget = \"Add\";\r\n    if (this.props.editModel != null) {\r\n      var { key, title, content } = this.props.editModel;\r\n      titleWidget = \"Edit\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card my-2 border-primary\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">{titleWidget}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={event => this.handleSubmit(event)}>\r\n            <input type=\"hidden\" value={this.renderValue(key)} />\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              required\r\n              defaultValue={this.renderValue(title)}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"title\"\r\n              onChange={event => this.handleChange(event)}\r\n            />\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              required\r\n              onChange={event => this.handleChange(event)}\r\n              rows={6}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"content\"\r\n              defaultValue={this.renderValue(content)}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 btn btn-block btn-outline-primary\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"btn btn-block btn-outline-secondary\"\r\n            >\r\n              Reset form\r\n            </button>\r\n            <button\r\n              onClick={event => this.handleCancel(event)}\r\n              className=\"btn btn-block btn-light\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    editModel: state.appStatus.isEditMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    cancelAdd: () => dispatch({ type: actionTypes.TURN_ADD_OFF }),\r\n    addNewFunc: newNote => dispatch(addNewNote(newNote)),\r\n    editSaveFunc: editNote => dispatch(saveEditNote(editNote)),\r\n    cancelEdit: () => dispatch({ type: actionTypes.TURN_EDIT_OFF })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteForm);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TopMenu from \"./components/TopMenu\";\nimport Footer from \"./components/Footer\";\nimport Breadcrumb from \"./components/Breadcrumb\";\nimport NoteList from \"./components/NoteList\";\nimport SearchAndSort from \"./components/SearchAndSort\";\nimport Actions from \"./components/Actions\";\nimport NoteForm from \"./components/NoteForm\";\nimport { connect } from \"react-redux\";\n\nexport class App extends Component {\n  render() {\n    var address = [];\n    if (this.props.status.isSearchMode !== null) \n      address.push(\"Search '\" + this.props.status.isSearchMode + \"'\");\n    if (this.props.status.isSortMode !== null) address.push(\"Sort\");\n    if (this.props.status.isAddMode) address.push(\"Add\");\n    if (this.props.status.isEditMode !== null) address.push(\"Edit\");  \n    return (\n      <div className=\"bg-light text-dark\">\n        <TopMenu />\n        <div className=\"container mt-3\">\n          <div className=\"row\">\n            <div className=\"col-sm-8 col-12 mb-3 px-2\">\n              <div className=\"bg-white border rounded shadow-sm\">\n                <Breadcrumb address={address} />\n                <NoteList />\n              </div>\n            </div>\n            <div className=\"col-sm-4 px-2\">\n              <SearchAndSort />\n              {this.props.status.isAddMode \n                || this.props.status.isEditMode != null ? <NoteForm /> : <Actions />}\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    status : state.appStatus\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    isLoading : true,\r\n    data : {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    var newData = state.data;\r\n    switch (action.type) {\r\n    case actionTypes.GET_ALL:\r\n        return { ...state, data : action.payload, isLoading : false }\r\n    case actionTypes.ADD_NEW:\r\n        return { ...state, data : Object.assign(action.newItem, state.data)}\r\n    case actionTypes.DELETE:\r\n        Object.keys(newData).filter(key => key === action.noteId)\r\n            .forEach(key => delete newData[key]);\r\n        return { ...state, data : newData };\r\n    case actionTypes.EDIT:\r\n        const idItem = Object.keys(action.item)[0];\r\n        newData[idItem] = action.item[idItem];\r\n        return { ...state, data : newData};\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isAddMode: false,\r\n  isEditMode: null,\r\n  isSearchMode: null,\r\n  isSortMode : null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TURN_ADD_ON:\r\n      return { ...state, isAddMode: true };\r\n    case actionTypes.TURN_ADD_OFF:\r\n      return { ...state, isAddMode: false };\r\n    case actionTypes.TURN_EDIT_OFF:\r\n      return { ...state, isEditMode: null };\r\n    case actionTypes.TURN_EDIT_ON:\r\n      return { ...state, isEditMode: action.itemEdit, isAddMode: false };\r\n    case actionTypes.TURN_SEARCH_OFF:\r\n      return { ...state, isSearchMode: null };\r\n    case actionTypes.TURN_SEARCH_ON:\r\n      return { ...state, isSearchMode: action.keyword };\r\n    case actionTypes.TURN_SORT_ON:\r\n      return { ...state, isSortMode: action.modeName };\r\n    case actionTypes.TURN_SORT_OFF:\r\n      return { ...state, isSortMode: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport noteReducer from \"./reducers/noteReducer\";\r\nimport modeReducer from \"./reducers/modeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    noteData : noteReducer,\r\n    appStatus : modeReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}