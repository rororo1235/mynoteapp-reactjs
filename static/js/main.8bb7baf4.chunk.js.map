{"version":3,"sources":["components/TopMenu.js","components/Footer.js","components/Breadcrumb.js","store/actions/actionTypes.js","firebase/firebaseConfig.js","firebase/noteDataRef.js","store/actions/noteDataActions.js","components/NoteItem.js","components/Loading.js","components/helper/_function.js","components/helper/_messageCreator.js","components/ModalConfirmDialog.js","components/NoteList.js","components/SearchAndSort.js","components/helper/jsonExporter.js","components/Actions.js","components/NoteForm.js","components/Messages.js","App.js","serviceWorker.js","store/reducers/noteReducer.js","store/reducers/modeReducer.js","store/reducers/messagesReducer.js","store/rootReducer.js","index.js"],"names":["TopMenu","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","Breadcrumb","address","this","props","map","value","index","length","key","aria-current","SORT_TITLE_ASC","SORT_TITLE_DESC","SORT_DATE_ASC","SORT_DATE_DESC","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","noteDataRef","database","ref","deleteNote","noteId","child","remove","NoteItem","handleOpenEdit","item","enterEditMode","renderNewFlag","unixTime","Math","round","Date","getTime","ONE_DAY","renderDateTime","date","title","toLocaleDateString","renderEditBtn","isThisItemEditing","data","idItem","idEditing","disabled","onClick","lastEditDate","content","showConfirmDeleteId","role","connect","dispatch","deleteFunc","deleteId","noteItem","itemEdit","Loading","templateSortFunc","allNotes","comparator","tempToSortArr","Object","keys","forEach","push","sort","first","second","fromEntries","sortTitleAsc","note","nextNote","localeCompare","sortTitleDesc","sortDateAsc","sortDateDesc","messageCreator","now","getMessAddDone","getMessEditDone","getMessSearchOff","getMessSortOff","getMessDeleteDone","ModalConfirmDialog","handleDelete","deleteNoteIdFunc","throwMessage","tabIndex","aria-labelledby","aria-hidden","data-dismiss","state","appStatus","idToConfirmDelete","message","NoteList","hasKeywordInTitleAndContent","keyword","search","getResultSearch","result","getResultSort","sortMode","actionTypes","helper","getEditingId","editModel","getNotes","noteData","isLoading","searchKey","entries","ownProps","isEditMode","isSearchMode","isSortMode","on","notes","payload","val","SearchAndSort","handleChange","event","setState","target","name","handleSearchSubmit","preventDefault","trim","turnSearchOn","handleCancelSearch","reset","cancelSearch","handleCancelSort","cancelSort","turnSortOn","onSubmit","onReset","required","onChange","placeholder","aria-haspopup","modeName","exportObj","filename","callback","dataUri","encodeURIComponent","JSON","stringify","tempNode","document","createElement","setAttribute","body","appendChild","click","Actions","handleExport","isExporting","setTimeout","jsonExporter","renderLoadingBtn","showNoteForm","alert","NoteForm","handleCancel","cancelEdit","cancelAdd","handleSubmitAdd","addNewFunc","e","handleSubmitEdit","editSaveFunc","handleSubmit","titleWidget","htmlFor","defaultValue","rows","newNote","newTempItem","getKey","editNote","editedItem","update","Messages","renderClearAllBtn","closeAllMessages","messages","position","onDismiss","closeFunc","timeout","messageId","App","status","isAddMode","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","slice","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bb7baf4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TopMenu extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            My Note App\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Home\r\n                  <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Services\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Contact\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopMenu;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"py-5 bg-dark\">\r\n      <div className=\"container\">\r\n        <p className=\"m-0 text-center text-white\">\r\n          Copyright © Your Website 2019\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Breadcrumb extends Component {\r\n  render() {\r\n    const {address} = this.props;\r\n    return (\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb bg-light border-bottom\">\r\n          <li className=\"breadcrumb-item\">\r\n            My Note App\r\n          </li>\r\n          {\r\n            address.map((value, index) => {\r\n              if (index === address.length-1) \r\n                return ( <li key={index} className=\"breadcrumb-item active\" aria-current=\"page\">{value}</li>); \r\n              else return (<li key={index} className=\"breadcrumb-item\">{value}</li>);\r\n            })\r\n          }\r\n\r\n        </ol>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Breadcrumb;\r\n","export const ADD_NEW = \"ADD_NEW\";\r\nexport const DELETE = \"DELETE\";\r\nexport const EDIT = \"EDIT\";\r\nexport const GET_ALL = \"GET_ALL\";\r\n\r\nexport const TURN_ADD_ON = \"TURN_ADD_ON\";\r\nexport const TURN_ADD_OFF = \"TURN_ADD_OFF\";\r\n\r\nexport const TURN_EDIT_OFF = \"TURN_EDIT_OFF\";\r\nexport const TURN_EDIT_ON = \"TURN_EDIT_ON\";\r\n\r\nexport const TURN_SEARCH_OFF = \"TURN_SEARCH_OFF\";\r\nexport const TURN_SEARCH_ON = \"TURN_SEARCH_ON\";\r\n\r\nexport const TURN_SORT_OFF = \"TURN_SORT_OFF\";\r\nexport const TURN_SORT_ON = \"TURN_SORT_ON\";\r\nexport const SORT_TITLE_ASC = \"SORT_TITLE_ASC\";\r\nexport const SORT_TITLE_DESC = \"SORT_TITLE_DESC\";\r\nexport const SORT_DATE_ASC = \"SORT_DATE_ASC\";\r\nexport const SORT_DATE_DESC = \"SORT_DATE_DESC\";\r\n\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const CLOSE_MESSAGE = \"CLOSE_MESSAGE\";\r\nexport const CLOSE_ALL_MESSAGES = \"CLOSE_ALL_MESSAGES\";\r\n\r\nexport const ADD_ID_TO_COFIRM_REMOVE = \"ADD_ID_TO_COFIRM_REMOVE\";","// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCsvX7RdDeDk_Pu7oF0iljd9drSgyM6r5M\",\r\n  authDomain: \"note-react-e1434.firebaseapp.com\",\r\n  databaseURL: \"https://note-react-e1434.firebaseio.com\",\r\n  projectId: \"note-react-e1434\",\r\n  storageBucket: \"note-react-e1434.appspot.com\",\r\n  messagingSenderId: \"575571829147\",\r\n  appId: \"1:575571829147:web:2a0c70aa0f5f2e1822013e\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport firebaseConfig from \"./firebaseConfig\";\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const noteDataRef = firebase.database().ref(\"/noteData\");","import * as actionTypes from \"./actionTypes\";\r\nimport {noteDataRef} from \"../../firebase/noteDataRef\";\r\n\r\nexport const getAllNotes = () => {\r\n    return dispatch => {\r\n        noteDataRef.on(\"value\", notes => {\r\n            dispatch({\r\n                type : actionTypes.GET_ALL,\r\n                payload : notes.val()\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewNote = (newTempItem) => {\r\n    return () => {\r\n        newTempItem.lastEditDate = new Date().getTime() / 1000 //time to unix\r\n        noteDataRef.push(newTempItem).getKey();\r\n    }\r\n} \r\n\r\nexport const deleteNote = (noteId) => {\r\n    return () => {\r\n        noteDataRef.child(noteId).remove();\r\n    }\r\n}\r\n\r\nexport const saveEditNote = (editedItem) => {\r\n    return () => {\r\n        noteDataRef.update(editedItem);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { deleteNote } from \"../store/actions/noteDataActions\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\"\r\n\r\nclass NoteItem extends Component {\r\n\r\n  handleOpenEdit = (item, id) => {\r\n    this.props.enterEditMode({...item, id});\r\n  }\r\n\r\n  renderNewFlag = (unixTime) => {\r\n    const nowUnixTime = Math.round((new Date()).getTime() / 1000), ONE_DAY = 86400;\r\n    if (nowUnixTime - unixTime < ONE_DAY/2)\r\n      return ( <span className=\"badge badge-danger badge-pill\">new</span>);\r\n  }\r\n\r\n  renderDateTime = (unixTime) => {\r\n    const date = new Date(unixTime*1000);\r\n    return (\r\n      <abbr title={date}>{date.toLocaleDateString()}</abbr>\r\n    );\r\n  }\r\n\r\n  renderEditBtn = (isThisItemEditing = false) => {\r\n    const {data, idItem, idEditing} = this.props;\r\n    if (idEditing !== null)\r\n      return (\r\n        <button type=\"button\" disabled className=\"btn btn-sm btn-outline-secondary\">\r\n          {isThisItemEditing ? \"Editing ...\" : \"Edit\"}\r\n        </button>\r\n      )\r\n    return (\r\n      <button type=\"button\" onClick={() => this.handleOpenEdit(data, idItem)} \r\n      className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n  )}\r\n\r\n  render() {\r\n    const {data : { title, lastEditDate, content }, idItem, idEditing, showConfirmDeleteId} = this.props;\r\n    const isThisItemEditing = (idItem === idEditing);\r\n    return (\r\n      <div className={\"card\" + (isThisItemEditing ? \" shadow\" : \" shadow-sm\")}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title mb-1\">{title} {this.renderNewFlag(lastEditDate)}</h5>\r\n          <small className=\"text-muted\">Last updated:  {this.renderDateTime(lastEditDate)}</small>\r\n          <p className=\"card-text mb-1 text-justify\">{content}</p>\r\n          <div className=\"btn-group mt-1 d-block text-right\" role=\"group\">\r\n            {this.renderEditBtn(isThisItemEditing)}\r\n            {isThisItemEditing ? \"\" : <button data-toggle=\"modal\" data-target=\"#confirmModal\"\r\n            type=\"button\" className=\"btn btn-sm btn-outline-secondary\" onClick={() =>showConfirmDeleteId(idItem)}>Delete</button>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteFunc : (deleteId) => dispatch(deleteNote(deleteId)),\r\n    enterEditMode : (noteItem) => {\r\n      dispatch({\r\n        type : actionTypes.TURN_EDIT_ON, \r\n        itemEdit : noteItem\r\n      })\r\n    },\r\n    showConfirmDeleteId : (noteId) => dispatch({type: actionTypes.ADD_ID_TO_COFIRM_REMOVE, noteId})\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(NoteItem);\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <p><span className=\"spinner-border text-secondary\" role=\"status\" /> Loading</p>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","const templateSortFunc = (allNotes, comparator) => {\r\n  var tempToSortArr = [];\r\n  Object.keys(allNotes).forEach(key => {\r\n    tempToSortArr.push([key, allNotes[key]]);\r\n  });\r\n  tempToSortArr.sort((first, second) => comparator(first[1], second[1]));\r\n  return Object.fromEntries(tempToSortArr);\r\n};\r\n\r\nexport const sortTitleAsc = allNotes => {\r\n  return templateSortFunc(allNotes, (note, nextNote) =>\r\n    note.title.localeCompare(nextNote.title)\r\n  );\r\n};\r\n\r\nexport const sortTitleDesc = allNotes => {\r\n  return templateSortFunc(allNotes, (note, nextNote) =>\r\n    nextNote.title.localeCompare(note.title)\r\n  );\r\n};\r\n\r\nexport const sortDateAsc = allNotes => {\r\n  var comparator = (note, nextNote) =>\r\n    nextNote.lastEditDate - note.lastEditDate;\r\n  return templateSortFunc(allNotes, comparator);\r\n};\r\n\r\nexport const sortDateDesc = allNotes => {\r\n  var comparator = (note, nextNote) =>\r\n    note.lastEditDate - nextNote.lastEditDate;\r\n  return templateSortFunc(allNotes, comparator);\r\n};\r\n","var messageCreator = (title, content, type) => {\r\n    return {\r\n        id : Date.now(),\r\n        title : title,\r\n        content : content,\r\n        type : type\r\n    }\r\n}\r\n\r\nexport const getMessEditOff = () => messageCreator(\"Edit mode\", \"Edit mode closed!\", \"info\");\r\nexport const getMessAddOff = () => messageCreator(\"Add mode\", \"Add mode closed!\", \"info\");\r\nexport const getMessAddDone = () => messageCreator(\"Add done\", \"Add new note done!\", \"success\");\r\nexport const getMessEditDone = () => messageCreator(\"Edit mode\", \"Edit note done!\", \"success\");\r\nexport const getMessSearchOff = () => messageCreator(\"Search mode\", \"Search mode turned off!\", \"info\");\r\nexport const getMessSortOff = () => messageCreator(\"Sort mode\", \"Sort mode turned off!\", \"info\");\r\nexport const getMessDeleteDone = () => messageCreator(\"Deleted!\", \"Delete done!\", \"success\");","import React, { Component } from 'react'\r\nimport { deleteNote } from \"../store/actions/noteDataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport * as messageCreator from \"./helper/_messageCreator\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\"\r\n\r\nclass ModalConfirmDialog extends Component {\r\n\r\n    handleDelete = (noteId) => {\r\n        const {deleteNoteIdFunc, throwMessage} = this.props;\r\n        deleteNoteIdFunc(noteId);\r\n        throwMessage(messageCreator.getMessDeleteDone());\r\n    }\r\n\r\n    render() {\r\n        const {noteId} = this.props;\r\n        return (\r\n            <div className=\"modal fade\" id=\"confirmModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"confirmModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"confirmModalLabel\">Confirm Delete</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                    <div className=\"modal-body\">Are you sure?</div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => this.handleDelete(noteId)}>Yes</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        noteId : state.appStatus.idToConfirmDelete\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteNoteIdFunc : (noteId) => dispatch(deleteNote(noteId)),\r\n        throwMessage : (message) => dispatch({type: actionTypes.ADD_MESSAGE, message}),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalConfirmDialog);\r\n","import NoteItem from \"./NoteItem\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllNotes } from \"../store/actions/noteDataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport * as helper from \"./helper/_function\";\r\nimport ModalConfirmDialog from \"./ModalConfirmDialog\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getNotes();\r\n  }\r\n\r\n  hasKeywordInTitleAndContent = (keyword, title, content) => {\r\n    return title.search(keyword) !== -1 || content.search(keyword) !== -1;\r\n  }\r\n\r\n  getResultSearch = (keyword, allNotes) => {\r\n    var result = {};\r\n    Object.keys(allNotes).forEach(key => {\r\n      if (this.hasKeywordInTitleAndContent(keyword, allNotes[key].title, allNotes[key].content))\r\n        result[key] = allNotes[key];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getResultSort = (sortMode, allNotes) => {\r\n    switch (sortMode) {\r\n      case actionTypes.SORT_TITLE_ASC:\r\n        return helper.sortTitleAsc(allNotes);\r\n      case actionTypes.SORT_TITLE_DESC:\r\n        return helper.sortTitleDesc(allNotes);\r\n      case actionTypes.SORT_DATE_ASC:\r\n        return helper.sortDateAsc(allNotes);\r\n      case actionTypes.SORT_DATE_DESC:\r\n        return helper.sortDateDesc(allNotes);\r\n      default:\r\n        return allNotes;\r\n    }\r\n  };\r\n\r\n  getEditingId = () => {\r\n    return this.props.editModel !== null ? this.props.editModel.id : null;\r\n  }\r\n\r\n  render() {\r\n    var { noteData, isLoading, searchKey, sortMode } = this.props;\r\n\r\n    if (searchKey !== null) {\r\n      noteData = this.getResultSearch(searchKey, noteData);\r\n    }\r\n\r\n    if (sortMode !== null) {\r\n      noteData = this.getResultSort(sortMode, noteData);\r\n    }\r\n\r\n    if (isLoading)\r\n      return (\r\n        <div className=\"card-columns px-3 vh-100 d-flex align-items-center justify-content-center\">\r\n          <Loading />\r\n        </div>\r\n      );\r\n    else if (Object.entries(noteData).length === 0)\r\n        return (\r\n          <div className=\"card-columns px-3 vh-100 d-flex justify-content-center\">\r\n            <p className=\"font-italic\">There is 0 result.</p>\r\n        </div>\r\n        )\r\n    return (\r\n      <div className=\"card-columns px-3 min-vh-100\">\r\n        <ModalConfirmDialog />\r\n        {Object.keys(noteData).map(key => (\r\n          <NoteItem\r\n            key={key}\r\n            idItem={key}\r\n            data={noteData[key]}\r\n            idEditing={this.getEditingId()}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    noteData: state.noteData.data,\r\n    isLoading: state.noteData.isLoading,\r\n    editModel: state.appStatus.isEditMode,\r\n    searchKey: state.appStatus.isSearchMode,\r\n    sortMode: state.appStatus.isSortMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getNotes: () => {\r\n      dispatch(getAllNotes());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport * as messageCreator from \"./helper/_messageCreator\";\r\n\r\nclass SearchAndSort extends Component {\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.searchKey && this.state.searchKey.trim() !== \"\") {\r\n      this.props.turnSearchOn(this.state.searchKey);\r\n    }\r\n  }\r\n\r\n  handleCancelSearch = (event) => {\r\n    event.target.reset();\r\n    this.props.cancelSearch();\r\n    this.setState({searchKey : \"\"});\r\n    this.props.throwMessage(messageCreator.getMessSearchOff());\r\n  }\r\n\r\n  handleCancelSort = () => {\r\n    this.props.cancelSort();\r\n    this.props.throwMessage(messageCreator.getMessSortOff());\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, searchKey, turnSortOn } = this.props;\r\n    if (isLoading)\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h5 className=\"card-title\">View Setting</h5>\r\n          </div>\r\n          <div className=\"card-body d-flex align-items-center justify-content-center\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">View Setting</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"search-form\">\r\n            <form onSubmit={(event) => this.handleSearchSubmit(event)} onReset={(event) => this.handleCancelSearch(event)}>\r\n              <input required onChange={(event) => this.handleChange(event)} name=\"searchKey\" type=\"text\" className=\"form-control mr-2\" placeholder=\"Search key ...\" />\r\n              <div className=\"float-right btn-group mt-2\">\r\n                {searchKey !== null ? <button type=\"reset\" className=\"btn btn-secondary\">Cancel</button> : null}\r\n                <button type=\"submit\" className=\"order-last btn btn-secondary \">Search</button>\r\n              </div>\r\n            </form>\r\n            <button className=\"mt-2 btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Sort\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n                <button className=\"dropdown-item btn\" onClick={() => turnSortOn(actionTypes.SORT_TITLE_ASC)}>Title A-Z</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => turnSortOn(actionTypes.SORT_TITLE_DESC)}>Title Z-A</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => turnSortOn(actionTypes.SORT_DATE_ASC)}>Date asc</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => turnSortOn(actionTypes.SORT_DATE_DESC)}>Date desc</button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className=\"dropdown-item btn\" onClick={this.handleCancelSort}>Reset sort</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isLoading : state.noteData.isLoading,\r\n    searchKey : state.appStatus.isSearchMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    turnSearchOn : (keyword) => dispatch({type : actionTypes.TURN_SEARCH_ON, keyword}),\r\n    cancelSearch : () => dispatch({type : actionTypes.TURN_SEARCH_OFF}),\r\n    cancelSort : () => dispatch({type: actionTypes.TURN_SORT_OFF}),\r\n    turnSortOn : (modeName) => dispatch({type: actionTypes.TURN_SORT_ON, modeName}),\r\n    throwMessage : (message) => dispatch({type: actionTypes.ADD_MESSAGE, message})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchAndSort);\r\n","export default (exportObj, filename, callback) => {\r\n  var dataUri = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n  var tempNode = document.createElement('a');\r\n  tempNode.setAttribute(\"href\", dataUri);\r\n  tempNode.setAttribute(\"download\", filename + \"-\" + Date.now() + \".json\");\r\n  document.body.appendChild(tempNode); // required for firefox\r\n  tempNode.click();\r\n  tempNode.remove();\r\n  callback();\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport jsonExporter from \"./helper/jsonExporter\";\r\n\r\nclass Actions extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n       isExporting : false\r\n    }\r\n  }\r\n  \r\n  handleExport = (noteData) => {\r\n    this.setState({ isExporting : true });\r\n    setTimeout(() =>  \r\n      jsonExporter(noteData, \"myappnote-data\", () => this.setState({ isExporting : false }))\r\n    , 3000)\r\n  }\r\n\r\n  renderLoadingBtn = () => (\r\n    <button className=\"btn btn-block btn-success\" disabled>\r\n      <span className=\"spinner-border-sm spinner-border\" role=\"status\" />\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </button>\r\n    )\r\n  \r\n  render() {\r\n    const {showNoteForm, noteData} = this.props;\r\n    return (\r\n      <div className=\"card my-2\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">Action</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <button className=\"btn btn-block btn-primary\" onClick={showNoteForm}>Add</button>\r\n          {this.state.isExporting ? this.renderLoadingBtn() : <button className=\"btn btn-block btn-outline-success\" onClick={() => this.handleExport(noteData)}>Export all</button>}\r\n          <button className=\"btn btn-block btn-outline-danger\" onClick={() => alert(\"This function is disabled.\")}>Clear all</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    noteData: state.noteData.data\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    showNoteForm : () => {dispatch({type: actionTypes.TURN_ADD_ON})}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Actions);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport { addNewNote, saveEditNote } from \"../store/actions/noteDataActions\";\r\nimport * as messageCreator from \"./helper/_messageCreator\";\r\n\r\nclass NoteForm extends Component {\r\n\r\n  isEditMode = () => {\r\n    return this.props.editModel !== null;\r\n  }\r\n  \r\n  handleCancel = event => {\r\n    event.preventDefault();\r\n    //var message = \"\";\r\n    if (this.isEditMode()) {\r\n      this.props.cancelEdit();\r\n      //message = messageCreator.getMessEditOff();\r\n    } else {\r\n      this.props.cancelAdd();\r\n      //message = messageCreator.getMessAddOff();\r\n    };\r\n    //this.props.throwMessage(message);\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmitAdd = event => {\r\n    try {\r\n      const { title, content } = this.state;\r\n      this.props.addNewFunc({ title, content });\r\n      this.props.throwMessage(messageCreator.getMessAddDone());\r\n      event.target.reset();\r\n      this.setState({\r\n        title: null,\r\n        content: null\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  handleSubmitEdit = () => {\r\n    var { editModel, editSaveFunc, throwMessage } = this.props;\r\n    var { title = editModel.title, content = editModel.content} = (this.state===null ? {} : this.state);\r\n    const lastEditDate = new Date().getTime() / 1000;\r\n    var editedItem = { [editModel.id] : {title, content, lastEditDate} };\r\n    editSaveFunc(editedItem);\r\n    throwMessage(messageCreator.getMessEditDone());\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.isEditMode()) {\r\n      this.handleSubmitEdit();\r\n      this.props.cancelEdit();\r\n    }\r\n    else this.handleSubmitAdd(event);\r\n  };\r\n\r\n  render() {\r\n    const isEditMode = this.isEditMode();\r\n    const { id = \"\", title = \"\", content = \"\" } = (isEditMode ?  this.props.editModel : {});\r\n    var titleWidget = (isEditMode ? \"Edit\" : \"Add\");\r\n\r\n    return (\r\n      <div className=\"card my-2 border-primary\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">{titleWidget}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={event => this.handleSubmit(event)}>\r\n            <input type=\"hidden\" value={id} />\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              required\r\n              defaultValue={title}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"title\"\r\n              onChange={event => this.handleChange(event)}\r\n            />\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              required\r\n              onChange={event => this.handleChange(event)}\r\n              rows={6}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"content\"\r\n              defaultValue={content}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 btn btn-block btn-outline-primary\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"btn btn-block btn-outline-secondary\"\r\n            >\r\n              Reset form\r\n            </button>\r\n            <button\r\n              onClick={event => this.handleCancel(event)}\r\n              className=\"btn btn-block btn-light\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    editModel: state.appStatus.isEditMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    cancelAdd: () => dispatch({ type: actionTypes.TURN_ADD_OFF }),\r\n    addNewFunc: newNote => dispatch(addNewNote(newNote)),\r\n    editSaveFunc: editNote => dispatch(saveEditNote(editNote)),\r\n    cancelEdit: () => dispatch({ type: actionTypes.TURN_EDIT_OFF }),\r\n    throwMessage : (message) => dispatch({type: actionTypes.ADD_MESSAGE, message})\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteForm);\r\n","import React, { Component } from 'react';\r\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\n\r\nclass Messages extends Component {\r\n    renderClearAllBtn = () => (\r\n        <button onClick={() => this.props.closeAllMessages()} \r\n            type=\"button\" className=\"btn btn-light btn-sm\">Clear all</button>\r\n    );\r\n\r\n    render() {\r\n        const {messages} = this.props;\r\n        return (\r\n            <AlertContainer position=\"bottom-right\">\r\n                {messages.map(message => \r\n                    <Alert key={message.id} type={message.type} \r\n                        onDismiss={() => this.props.closeFunc(message.id)} timeout={4000}> \r\n                        <h5>{message.title}</h5>\r\n                        <div>{message.content}</div>\r\n                    </Alert>)}\r\n                {messages.length === 0 ? null : this.renderClearAllBtn()}\r\n\t        </AlertContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSateToProps = (state) => {\r\n    return {\r\n        messages : state.messages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closeFunc : (messageId) => dispatch({type : actionTypes.CLOSE_MESSAGE, messageId}),\r\n        closeAllMessages : () => dispatch({type : actionTypes.CLOSE_ALL_MESSAGES})\r\n    }\r\n}\r\n\r\nexport default connect(mapSateToProps, mapDispatchToProps)(Messages);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TopMenu from \"./components/TopMenu\";\nimport Footer from \"./components/Footer\";\nimport Breadcrumb from \"./components/Breadcrumb\";\nimport NoteList from \"./components/NoteList\";\nimport SearchAndSort from \"./components/SearchAndSort\";\nimport Actions from \"./components/Actions\";\nimport NoteForm from \"./components/NoteForm\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./components/Messages\";\n\nexport class App extends Component {\n  render() {\n    var address = [];\n    if (this.props.status.isSearchMode !== null) \n      address.push(\"Search \\\"\" + this.props.status.isSearchMode + \"\\\"\");\n    if (this.props.status.isSortMode !== null) address.push(\"Sort\");\n    if (this.props.status.isAddMode) address.push(\"Add\");\n    if (this.props.status.isEditMode !== null) address.push(\"Edit\");  \n\n    return (\n      <div className=\"bg-light text-dark\">\n        <TopMenu />\n        <Messages />\n        <div className=\"container mt-3\">\n          <div className=\"row flex-column-reverse flex-md-row\">\n            <div className=\"col-sm-8 col-12 mb-3 px-2\">\n              <div className=\"bg-white border rounded shadow-sm\">\n                <Breadcrumb address={address} />\n                <NoteList />\n              </div>\n            </div>\n            <div className=\"col-sm-4 px-2\">\n              <SearchAndSort />\n              {this.props.status.isAddMode \n                || this.props.status.isEditMode != null ? <NoteForm /> : <Actions />}\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    status : state.appStatus\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    isLoading : true,\r\n    data : {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case actionTypes.GET_ALL:\r\n        return { ...state, data : action.payload, isLoading : false };\r\n    default:\r\n        return state;\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isAddMode: false,\r\n  isEditMode: null,\r\n  isSearchMode: null,\r\n  isSortMode : null,\r\n  idToConfirmDelete : null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TURN_ADD_ON:\r\n      return { ...state, isAddMode: true };\r\n    case actionTypes.TURN_ADD_OFF:\r\n      return { ...state, isAddMode: false };\r\n    case actionTypes.TURN_EDIT_OFF:\r\n      return { ...state, isEditMode: null };\r\n    case actionTypes.TURN_EDIT_ON:\r\n      return { ...state, isEditMode: action.itemEdit, isAddMode: false };\r\n    case actionTypes.TURN_SEARCH_OFF:\r\n      return { ...state, isSearchMode: null };\r\n    case actionTypes.TURN_SEARCH_ON:\r\n      return { ...state, isSearchMode: action.keyword };\r\n    case actionTypes.TURN_SORT_ON:\r\n      return { ...state, isSortMode: action.modeName };\r\n    case actionTypes.TURN_SORT_OFF:\r\n      return { ...state, isSortMode: null };\r\n    case actionTypes.ADD_ID_TO_COFIRM_REMOVE:\r\n      return { ...state, idToConfirmDelete : action.noteId };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = [];\r\nconst MAX_MESSAGE = 5;\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case actionTypes.ADD_MESSAGE:\r\n        return [ ...state.slice(-MAX_MESSAGE + 1), action.message ];\r\n    case actionTypes.CLOSE_MESSAGE:\r\n        return state.filter(message => message.id !== action.messageId);\r\n    case actionTypes.CLOSE_ALL_MESSAGES:\r\n        return [];\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport noteReducer from \"./reducers/noteReducer\";\r\nimport modeReducer from \"./reducers/modeReducer\";\r\nimport messagesReducer from \"./reducers/messagesReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    noteData : noteReducer,\r\n    appStatus : modeReducer,\r\n    messages : messagesReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}