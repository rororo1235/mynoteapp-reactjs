{"version":3,"sources":["components/TopMenu.js","components/Footer.js","components/Breadcrumb.js","store/actions/actionTypes.js","firebase/firebaseConfig.js","firebase/noteDataRef.js","components/helper/_messageCreator.js","components/NoteItem.js","store/actions/noteDataActions.js","components/Loading.js","components/helper/_function.js","components/NoteList.js","components/SearchAndSort.js","components/Actions.js","components/NoteForm.js","components/Messages.js","App.js","serviceWorker.js","store/reducers/noteReducer.js","store/reducers/modeReducer.js","store/reducers/messagesReducer.js","store/rootReducer.js","index.js"],"names":["TopMenu","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","Breadcrumb","address","this","props","map","value","index","length","key","aria-current","SORT_TITLE_ASC","SORT_TITLE_DESC","SORT_DATE_ASC","SORT_DATE_DESC","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","noteDataRef","database","ref","messageCreator","title","content","Date","now","getMessAddDone","getMessEditDone","getMessSearchOff","getMessSortOff","getMessDeleteDone","NoteItem","handleOpenEdit","item","enterEditMode","handleDelete","deleteId","window","confirm","deleteFunc","throwMessage","renderNewFlag","unixTime","Math","round","getTime","ONE_DAY","renderDateTime","date","toLocaleDateString","renderEditBtn","disableEditBtn","disabled","onClick","data","idItem","lastEditDate","role","connect","dispatch","noteId","child","remove","noteItem","itemEdit","message","Loading","templateSortFunc","allNotes","comparator","tempToSortArr","Object","keys","forEach","push","sort","first","second","fromEntries","sortTitleAsc","note","nextNote","localeCompare","sortTitleDesc","sortDateAsc","sortDateDesc","NoteList","getResultSearch","keyword","result","search","getResultSort","sortMode","actionTypes","helper","getNotes","noteData","isLoading","searchKey","entries","isEditMode","state","ownProps","appStatus","isSearchMode","isSortMode","on","notes","payload","val","SearchAndSort","handleChange","event","setState","target","name","handleSearchSubmit","preventDefault","trim","turnSearchOn","handleCancelSearch","reset","cancelSearch","handleCancelSort","cancelSort","onSubmit","onReset","required","onChange","placeholder","aria-haspopup","turnSortOn","modeName","Actions","showNoteForm","NoteForm","handleCancel","editModel","cancelEdit","cancelAdd","handleSubmitAdd","addNewFunc","e","handleSubmitEdit","toString","editedItem","editSaveFunc","handleSubmit","renderValue","titleWidget","htmlFor","defaultValue","rows","newNote","newItem","getKey","editNote","update","Messages","renderClearAllBtn","closeAllMessages","messages","position","onDismiss","closeFunc","timeout","messageId","App","status","isAddMode","Boolean","location","hostname","match","initialState","rootReducer","combineReducers","action","newData","assign","filter","slice","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1eaf4c2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TopMenu extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            My Note App\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Home\r\n                  <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Services\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Contact\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopMenu;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"py-5 bg-dark\">\r\n      <div className=\"container\">\r\n        <p className=\"m-0 text-center text-white\">\r\n          Copyright © Your Website 2019\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Breadcrumb extends Component {\r\n  render() {\r\n    const {address} = this.props;\r\n    return (\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb bg-light border-bottom\">\r\n          <li className=\"breadcrumb-item\">\r\n            My Note App\r\n          </li>\r\n          {\r\n            address.map((value, index) => {\r\n              if (index === address.length-1) \r\n                return ( <li key={index} className=\"breadcrumb-item active\" aria-current=\"page\">{value}</li>); \r\n              else return (<li key={index} className=\"breadcrumb-item\">{value}</li>);\r\n            })\r\n          }\r\n\r\n        </ol>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Breadcrumb;\r\n","export const ADD_NEW = \"ADD_NEW\";\r\nexport const DELETE = \"DELETE\";\r\nexport const EDIT = \"EDIT\";\r\nexport const GET_ALL = \"GET_ALL\";\r\n\r\nexport const TURN_ADD_ON = \"TURN_ADD_ON\";\r\nexport const TURN_ADD_OFF = \"TURN_ADD_OFF\";\r\n\r\nexport const TURN_EDIT_OFF = \"TURN_EDIT_OFF\";\r\nexport const TURN_EDIT_ON = \"TURN_EDIT_ON\";\r\n\r\nexport const TURN_SEARCH_OFF = \"TURN_SEARCH_OFF\";\r\nexport const TURN_SEARCH_ON = \"TURN_SEARCH_ON\";\r\n\r\nexport const TURN_SORT_OFF = \"TURN_SORT_OFF\";\r\nexport const TURN_SORT_ON = \"TURN_SORT_ON\";\r\nexport const SORT_TITLE_ASC = \"SORT_TITLE_ASC\";\r\nexport const SORT_TITLE_DESC = \"SORT_TITLE_DESC\";\r\nexport const SORT_DATE_ASC = \"SORT_DATE_ASC\";\r\nexport const SORT_DATE_DESC = \"SORT_DATE_DESC\";\r\n\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const CLOSE_MESSAGE = \"CLOSE_MESSAGE\";\r\nexport const CLOSE_ALL_MESSAGES = \"CLOSE_ALL_MESSAGES\";","// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCsvX7RdDeDk_Pu7oF0iljd9drSgyM6r5M\",\r\n  authDomain: \"note-react-e1434.firebaseapp.com\",\r\n  databaseURL: \"https://note-react-e1434.firebaseio.com\",\r\n  projectId: \"note-react-e1434\",\r\n  storageBucket: \"note-react-e1434.appspot.com\",\r\n  messagingSenderId: \"575571829147\",\r\n  appId: \"1:575571829147:web:2a0c70aa0f5f2e1822013e\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport firebaseConfig from \"./firebaseConfig\";\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const noteDataRef = firebase.database().ref(\"/noteData\");","var messageCreator = (title, content, type) => {\r\n    return {\r\n        id : Date.now(),\r\n        title : title,\r\n        content : content,\r\n        type : type\r\n    }\r\n}\r\n\r\nexport const getMessEditOff = () => messageCreator(\"Edit mode\", \"Edit mode closed!\", \"info\");\r\nexport const getMessAddOff = () => messageCreator(\"Add mode\", \"Add mode closed!\", \"info\");\r\nexport const getMessAddDone = () => messageCreator(\"Add done\", \"Add new note done!\", \"success\");\r\nexport const getMessEditDone = () => messageCreator(\"Edit mode\", \"Edit note done!\", \"success\");\r\nexport const getMessSearchOff = () => messageCreator(\"Search mode\", \"Search mode turned off!\", \"info\");\r\nexport const getMessSortOff = () => messageCreator(\"Sort mode\", \"Sort mode turned off!\", \"info\");\r\nexport const getMessDeleteDone = () => messageCreator(\"Deleted!\", \"Delete done!\", \"success\");","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { deleteNote } from \"../store/actions/noteDataActions\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\"\r\nimport * as messageCreator from \"./helper/_messageCreator\";\r\n\r\nclass NoteItem extends Component {\r\n\r\n  handleOpenEdit = (item, id) => {\r\n    item[\"key\"] = id;\r\n    this.props.enterEditMode(item);\r\n  }\r\n\r\n  handleDelete = (deleteId) => {\r\n    if (window.confirm(\"Are you sure ?\")){\r\n      this.props.deleteFunc(deleteId);\r\n      this.props.throwMessage(messageCreator.getMessDeleteDone());\r\n    }\r\n  } \r\n\r\n  renderNewFlag = (unixTime) => {\r\n    const nowUnixTime = Math.round((new Date()).getTime() / 1000);\r\n    const ONE_DAY = 86400;\r\n    if (nowUnixTime - unixTime < ONE_DAY/2)\r\n    return ( <span className=\"badge badge-danger badge-pill\">new</span>);\r\n  }\r\n\r\n  renderDateTime = (unixTime) => {\r\n    const date = new Date(unixTime*1000);\r\n    return (\r\n      <abbr title={date}>{date.toLocaleDateString()}</abbr>\r\n    );\r\n  }\r\n\r\n  renderEditBtn = () => {\r\n    if (this.props.disableEditBtn)\r\n      return (\r\n        <button type=\"button\" disabled className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n      )\r\n    return (\r\n      <button type=\"button\" onClick={() => this.handleOpenEdit(this.props.data, this.props.idItem)} \r\n      className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n  )}\r\n\r\n  render() {\r\n    const {title, lastEditDate, content} = this.props.data;\r\n    return (\r\n      <div className=\"card shadow-sm\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{title} {this.renderNewFlag(lastEditDate)}</h5>\r\n          <p className=\"card-text mb-1\">{content}</p>\r\n          <small className=\"text-muted\">Last updated:  {this.renderDateTime(lastEditDate)}</small>\r\n          <div className=\"btn-group mt-1 d-block text-right\" role=\"group\">\r\n            {this.renderEditBtn()}\r\n            <button onClick={() => this.handleDelete(this.props.idItem)} type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteFunc : (deleteId) => dispatch(deleteNote(deleteId)),\r\n    enterEditMode : (noteItem) => {\r\n      dispatch({\r\n        type : actionTypes.TURN_EDIT_ON, \r\n        itemEdit : noteItem\r\n      })\r\n    },\r\n    throwMessage : (message) => dispatch({type: actionTypes.ADD_MESSAGE, message})\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(NoteItem);\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport {noteDataRef} from \"../../firebase/noteDataRef\";\r\n\r\nexport const getAllNotes = () => {\r\n    return dispatch => {\r\n        noteDataRef.on(\"value\", notes => {\r\n            dispatch({\r\n                type : actionTypes.GET_ALL,\r\n                payload : notes.val()\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewNote = (newItem) => {\r\n    return dispatch => {\r\n        newItem.lastEditDate = new Date().getTime() / 1000 //time to unix\r\n        const id = noteDataRef.push(newItem).getKey();\r\n        const newNote = {};\r\n        newNote[id] = newItem;\r\n        dispatch({\r\n            type : actionTypes.ADD_NEW,\r\n            newItem : newNote\r\n        })\r\n    }\r\n} \r\n\r\nexport const deleteNote = (noteId) => {\r\n    return dispatch => {\r\n        noteDataRef.child(noteId).remove();\r\n        dispatch({\r\n            type : actionTypes.DELETE,\r\n            noteId : noteId\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveEditNote = (editedItem) => {\r\n    return dispatch => {\r\n        noteDataRef.update(editedItem);\r\n        dispatch({\r\n            type : actionTypes.EDIT,\r\n            item : editedItem\r\n        })\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <p><span className=\"spinner-border text-secondary\" role=\"status\" /> Loading</p>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","const templateSortFunc = (allNotes, comparator) => {\r\n  var tempToSortArr = [];\r\n  Object.keys(allNotes).forEach(key => {\r\n    tempToSortArr.push([key, allNotes[key]]);\r\n  });\r\n  tempToSortArr.sort((first, second) => comparator(first[1], second[1]));\r\n  return Object.fromEntries(tempToSortArr);\r\n};\r\n\r\nexport const sortTitleAsc = allNotes => {\r\n  return templateSortFunc(allNotes, (note, nextNote) =>\r\n    note.title.localeCompare(nextNote.title)\r\n  );\r\n};\r\n\r\nexport const sortTitleDesc = allNotes => {\r\n  return templateSortFunc(allNotes, (note, nextNote) =>\r\n    nextNote.title.localeCompare(note.title)\r\n  );\r\n};\r\n\r\nexport const sortDateAsc = allNotes => {\r\n  var comparator = (note, nextNote) =>\r\n    nextNote.lastEditDate - note.lastEditDate;\r\n  return templateSortFunc(allNotes, comparator);\r\n};\r\n\r\nexport const sortDateDesc = allNotes => {\r\n  var comparator = (note, nextNote) =>\r\n    note.lastEditDate - nextNote.lastEditDate;\r\n  return templateSortFunc(allNotes, comparator);\r\n};\r\n","import NoteItem from \"./NoteItem\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllNotes } from \"../store/actions/noteDataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport * as helper from \"./helper/_function\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getNotes();\r\n  }\r\n\r\n  getResultSearch = (keyword, allNotes) => {\r\n    var result = {};\r\n    Object.keys(allNotes).forEach(key => {\r\n      if (allNotes[key].title.search(keyword) !== -1 ||\r\n        allNotes[key].content.search(keyword) !== -1 )\r\n        result[key] = allNotes[key];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getResultSort = (sortMode, allNotes) => {\r\n    switch (sortMode) {\r\n      case actionTypes.SORT_TITLE_ASC:\r\n        return helper.sortTitleAsc(allNotes);\r\n      case actionTypes.SORT_TITLE_DESC:\r\n        return helper.sortTitleDesc(allNotes);\r\n      case actionTypes.SORT_DATE_ASC:\r\n        return helper.sortDateAsc(allNotes);\r\n      case actionTypes.SORT_DATE_DESC:\r\n        return helper.sortDateDesc(allNotes);\r\n      default:\r\n        return allNotes;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var { noteData, isLoading, searchKey, sortMode } = this.props;\r\n\r\n    if (searchKey !== null) {\r\n      noteData = this.getResultSearch(searchKey, noteData);\r\n    }\r\n\r\n    if (sortMode !== null) {\r\n      noteData = this.getResultSort(sortMode, noteData);\r\n    }\r\n\r\n    if (isLoading)\r\n      return (\r\n        <div className=\"card-columns px-3 vh-100 d-flex align-items-center justify-content-center\">\r\n          <Loading />\r\n        </div>\r\n      );\r\n    else if (Object.entries(noteData).length === 0)\r\n        return (\r\n          <div className=\"card-columns px-3 vh-100 d-flex justify-content-center\">\r\n            <p className=\"font-italic\">There is 0 result.</p>\r\n        </div>\r\n        )\r\n    return (\r\n      <div className=\"card-columns px-3 min-vh-100\">\r\n        {Object.keys(noteData).map(key => (\r\n          <NoteItem\r\n            key={key}\r\n            idItem={key}\r\n            data={noteData[key]}\r\n            disableEditBtn={this.props.isEditMode !== null}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    noteData: state.noteData.data,\r\n    isLoading: state.noteData.isLoading,\r\n    isEditMode: state.appStatus.isEditMode,\r\n    searchKey: state.appStatus.isSearchMode,\r\n    sortMode: state.appStatus.isSortMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getNotes: () => {\r\n      dispatch(getAllNotes());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport * as messageCreator from \"./helper/_messageCreator\";\r\n\r\nclass SearchAndSort extends Component {\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name] : event.target.value\r\n    })\r\n  }\r\n\r\n  handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.searchKey && this.state.searchKey.trim() !== \"\") {\r\n      this.props.turnSearchOn(this.state.searchKey);\r\n    }\r\n  }\r\n\r\n  handleCancelSearch = (event) => {\r\n    event.target.reset();\r\n    this.props.cancelSearch();\r\n    this.setState({searchKey : \"\"});\r\n    this.props.throwMessage(messageCreator.getMessSearchOff());\r\n  }\r\n\r\n  handleCancelSort = () => {\r\n    this.props.cancelSort();\r\n    this.props.throwMessage(messageCreator.getMessSortOff());\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.props;\r\n    if (isLoading)\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h5 className=\"card-title\">View Setting</h5>\r\n          </div>\r\n          <div className=\"card-body d-flex align-items-center justify-content-center\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">View Setting</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"search-form\">\r\n            <form onSubmit={(event) => this.handleSearchSubmit(event)} onReset={(event) => this.handleCancelSearch(event)}>\r\n              <input required onChange={(event) => this.handleChange(event)} name=\"searchKey\" type=\"text\" className=\"form-control mr-2\" placeholder=\"Search key ...\" />\r\n              <div className=\"float-right btn-group mt-2\">\r\n                {this.props.searchKey !== null ? <button type=\"reset\" className=\"btn btn-secondary\">Cancel</button> : null}\r\n                <button type=\"submit\" className=\"order-last btn btn-secondary \">Search</button>\r\n              </div>\r\n            </form>\r\n            <button className=\"mt-2 btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Sort\r\n            </button>\r\n            <div className=\"dropdown-menu\">\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.turnSortOn(actionTypes.SORT_TITLE_ASC)}>Title A-Z</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.turnSortOn(actionTypes.SORT_TITLE_DESC)}>Title Z-A</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.turnSortOn(actionTypes.SORT_DATE_ASC)}>Date asc</button>\r\n                <button className=\"dropdown-item btn\" onClick={() => this.props.turnSortOn(actionTypes.SORT_DATE_DESC)}>Date desc</button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className=\"dropdown-item btn\" onClick={this.handleCancelSort}>Reset sort</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isLoading : state.noteData.isLoading,\r\n    searchKey : state.appStatus.isSearchMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    turnSearchOn : (keyword) => dispatch({type : actionTypes.TURN_SEARCH_ON, keyword}),\r\n    cancelSearch : () => dispatch({type : actionTypes.TURN_SEARCH_OFF}),\r\n    cancelSort : () => dispatch({type: actionTypes.TURN_SORT_OFF}),\r\n    turnSortOn : (modeName) => dispatch({type: actionTypes.TURN_SORT_ON, modeName}),\r\n    throwMessage : (message) => dispatch({type: actionTypes.ADD_MESSAGE, message})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchAndSort);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\n\r\nclass Actions extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card my-2\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">Action</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <button className=\"btn btn-block btn-primary\" onClick={this.props.showNoteForm}>Add</button>\r\n          <button className=\"btn btn-block btn-danger\">Clear all</button>\r\n          {/* <button className=\"btn btn-block btn-primary\" disabled>\r\n            <span className=\"spinner-border-sm spinner-border\" role=\"status\" />\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    showNoteForm : () => {dispatch({type: actionTypes.TURN_ADD_ON})}\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Actions);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\nimport { addNewNote, saveEditNote } from \"../store/actions/noteDataActions\";\r\nimport * as messageCreator from \"./helper/_messageCreator\";\r\n\r\nclass NoteForm extends Component {\r\n  \r\n  handleCancel = event => {\r\n    event.preventDefault();\r\n    //var message = \"\";\r\n    if (this.props.editModel != null) {\r\n      this.props.cancelEdit();\r\n      //message = messageCreator.getMessEditOff();\r\n    } else {\r\n      this.props.cancelAdd();\r\n      //message = messageCreator.getMessAddOff();\r\n    };\r\n    //this.props.throwMessage(message);\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmitAdd = event => {\r\n    try {\r\n      const { title, content } = this.state;\r\n      this.props.addNewFunc({ title, content });\r\n      this.props.throwMessage(messageCreator.getMessAddDone());\r\n      event.target.reset();\r\n      this.setState({\r\n        title: null,\r\n        content: null\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  handleSubmitEdit = () => {\r\n    try {\r\n    var { title, content } = this.state;\r\n    //undefined check\r\n    title.toString();\r\n    content.toString();\r\n    } catch (e) {\r\n      if (!title) title = this.props.editModel.title;\r\n      if (!content) content = this.props.editModel.content;\r\n    }\r\n\r\n    var editedItem = {};\r\n    const lastEditDate = new Date().getTime() / 1000\r\n    editedItem[this.props.editModel.key] = { title, content,lastEditDate };\r\n    this.props.editSaveFunc(editedItem);\r\n    this.props.throwMessage(messageCreator.getMessEditDone());\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.editModel != null) {\r\n      this.handleSubmitEdit();\r\n      this.props.cancelEdit();\r\n    }\r\n    else this.handleSubmitAdd(event);\r\n  };\r\n\r\n  renderValue = value => {\r\n    return value ? value : \"\";\r\n  };\r\n\r\n  render() {\r\n    var titleWidget = \"Add\";\r\n    if (this.props.editModel != null) {\r\n      var { key, title, content } = this.props.editModel;\r\n      titleWidget = \"Edit\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card my-2 border-primary\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">{titleWidget}</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={event => this.handleSubmit(event)}>\r\n            <input type=\"hidden\" value={this.renderValue(key)} />\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              required\r\n              defaultValue={this.renderValue(title)}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"title\"\r\n              onChange={event => this.handleChange(event)}\r\n            />\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              required\r\n              onChange={event => this.handleChange(event)}\r\n              rows={6}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"content\"\r\n              defaultValue={this.renderValue(content)}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 btn btn-block btn-outline-primary\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              type=\"reset\"\r\n              className=\"btn btn-block btn-outline-secondary\"\r\n            >\r\n              Reset form\r\n            </button>\r\n            <button\r\n              onClick={event => this.handleCancel(event)}\r\n              className=\"btn btn-block btn-light\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    editModel: state.appStatus.isEditMode\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    cancelAdd: () => dispatch({ type: actionTypes.TURN_ADD_OFF }),\r\n    addNewFunc: newNote => dispatch(addNewNote(newNote)),\r\n    editSaveFunc: editNote => dispatch(saveEditNote(editNote)),\r\n    cancelEdit: () => dispatch({ type: actionTypes.TURN_EDIT_OFF }),\r\n    throwMessage : (message) => dispatch({type: actionTypes.ADD_MESSAGE, message})\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NoteForm);\r\n","import React, { Component } from 'react';\r\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions/actionTypes\";\r\n\r\nclass Messages extends Component {\r\n    renderClearAllBtn = () => (\r\n        <button onClick={() => this.props.closeAllMessages()} \r\n            type=\"button\" className=\"btn btn-warning btn-sm\">Clear all</button>\r\n    );\r\n\r\n    render() {\r\n        const {messages} = this.props;\r\n        return (\r\n            <AlertContainer position=\"bottom-right\">\r\n                {messages.length === 0 ? null : this.renderClearAllBtn()}\r\n                {messages.map(message => \r\n                    <Alert key={message.id} type={message.type} \r\n                        onDismiss={() => this.props.closeFunc(message.id)} timeout={4000}> \r\n                        <h5>{message.title}</h5>\r\n                        <div>{message.content}</div>\r\n                    </Alert>)}\r\n\t        </AlertContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSateToProps = (state) => {\r\n    return {\r\n        messages : state.messages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closeFunc : (messageId) => dispatch({type : actionTypes.CLOSE_MESSAGE, messageId}),\r\n        closeAllMessages : () => dispatch({type : actionTypes.CLOSE_ALL_MESSAGES})\r\n    }\r\n}\r\n\r\nexport default connect(mapSateToProps, mapDispatchToProps)(Messages);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TopMenu from \"./components/TopMenu\";\nimport Footer from \"./components/Footer\";\nimport Breadcrumb from \"./components/Breadcrumb\";\nimport NoteList from \"./components/NoteList\";\nimport SearchAndSort from \"./components/SearchAndSort\";\nimport Actions from \"./components/Actions\";\nimport NoteForm from \"./components/NoteForm\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./components/Messages\";\n\nexport class App extends Component {\n  render() {\n    var address = [];\n    if (this.props.status.isSearchMode !== null) \n      address.push(\"Search \\\"\" + this.props.status.isSearchMode + \"\\\"\");\n    if (this.props.status.isSortMode !== null) address.push(\"Sort\");\n    if (this.props.status.isAddMode) address.push(\"Add\");\n    if (this.props.status.isEditMode !== null) address.push(\"Edit\");  \n\n    return (\n      <div className=\"bg-light text-dark\">\n        <TopMenu />\n        <Messages />\n        <div className=\"container mt-3\">\n          <div className=\"row flex-column-reverse flex-md-row\">\n            <div className=\"col-sm-8 col-12 mb-3 px-2\">\n              <div className=\"bg-white border rounded shadow-sm\">\n                <Breadcrumb address={address} />\n                <NoteList />\n              </div>\n            </div>\n            <div className=\"col-sm-4 px-2\">\n              <SearchAndSort />\n              {this.props.status.isAddMode \n                || this.props.status.isEditMode != null ? <NoteForm /> : <Actions />}\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    status : state.appStatus\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    isLoading : true,\r\n    data : {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    var newData = state.data;\r\n    switch (action.type) {\r\n    case actionTypes.GET_ALL:\r\n        return { ...state, data : action.payload, isLoading : false }\r\n    case actionTypes.ADD_NEW:\r\n        return { ...state, data : Object.assign(action.newItem, state.data)}\r\n    case actionTypes.DELETE:\r\n        Object.keys(newData).filter(key => key === action.noteId)\r\n            .forEach(key => delete newData[key]);\r\n        return { ...state, data : newData };\r\n    case actionTypes.EDIT:\r\n        const idItem = Object.keys(action.item)[0];\r\n        newData[idItem] = action.item[idItem];\r\n        return { ...state, data : newData};\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isAddMode: false,\r\n  isEditMode: null,\r\n  isSearchMode: null,\r\n  isSortMode : null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TURN_ADD_ON:\r\n      return { ...state, isAddMode: true };\r\n    case actionTypes.TURN_ADD_OFF:\r\n      return { ...state, isAddMode: false };\r\n    case actionTypes.TURN_EDIT_OFF:\r\n      return { ...state, isEditMode: null };\r\n    case actionTypes.TURN_EDIT_ON:\r\n      return { ...state, isEditMode: action.itemEdit, isAddMode: false };\r\n    case actionTypes.TURN_SEARCH_OFF:\r\n      return { ...state, isSearchMode: null };\r\n    case actionTypes.TURN_SEARCH_ON:\r\n      return { ...state, isSearchMode: action.keyword };\r\n    case actionTypes.TURN_SORT_ON:\r\n      return { ...state, isSortMode: action.modeName };\r\n    case actionTypes.TURN_SORT_OFF:\r\n      return { ...state, isSortMode: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = [];\r\nconst MAX_MESSAGE = 5;\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case actionTypes.ADD_MESSAGE:\r\n        return [ ...state.slice(-MAX_MESSAGE + 1), action.message ];\r\n    case actionTypes.CLOSE_MESSAGE:\r\n        return state.filter(message => message.id !== action.messageId);\r\n    case actionTypes.CLOSE_ALL_MESSAGES:\r\n        return [];\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport noteReducer from \"./reducers/noteReducer\";\r\nimport modeReducer from \"./reducers/modeReducer\";\r\nimport messagesReducer from \"./reducers/messagesReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    noteData : noteReducer,\r\n    appStatus : modeReducer,\r\n    messages : messagesReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./store/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}